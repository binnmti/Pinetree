@page "/Account/RegisterConfirmation"

@using System.Text
@using System.Text.Encodings.Web;
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using Pinetree.Data

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager
@inject IConfiguration Configuration

<PageTitle>Register confirmation</PageTitle>

<h1>Register confirmation</h1>

<StatusMessage Message="@statusMessage" />

<p role="alert">Please check your email to confirm your account.<br><br>@((MarkupString)SenderEmail)</p>

@code {
    private string? statusMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? Email { get; set; }

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    private string SenderEmail { get; set; } = "";

    protected override void OnInitialized()
    {
        var sanitizedEmail = HtmlEncoder.Default.Encode(Configuration.GetConnectionString("SenderEmail") ?? "DoNotReply@yourdomain.com");
        SenderEmail = $"The email will be sent from the domain <strong>{sanitizedEmail}</strong>.<br> Please check your spam folder as the email may end up in your spam folder.";
    }

    protected override async Task OnInitializedAsync()
    {
        if (Email is null)
        {
            RedirectManager.RedirectTo("");
        }

        var user = await UserManager.FindByEmailAsync(Email);
        if (user is null)
        {
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
            statusMessage = "Error finding user for unspecified email";
        }
    }
}
