@page "/Account/Manage/PersonalData"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using Pinetree.Data
@using Pinetree.Services

@inject IdentityUserAccessor UserAccessor
@inject UserManager<ApplicationUser> UserManager
@inject UserDataDeletionService UserDataDeletionService
@inject IdentityRedirectManager RedirectManager
@inject ILogger<PersonalData> Logger

<PageTitle>Personal Data</PageTitle>

<StatusMessage Message="@message" />
<h3>Personal Data</h3>

<div class="row">
    <div class="col-md-6">
        <p>Your account contains personal data that you have given us. This page allows you to download or delete that data.</p>
        <p>
            <strong>Deleting this data will permanently remove your account, and this cannot be recovered.</strong>
        </p>
        
        <div class="mb-3">
            <form action="Account/Manage/DownloadPersonalData" method="post">
                <AntiforgeryToken />
                <button class="btn btn-primary" type="submit">
                    <i class="bi bi-download"></i> Download Personal Data
                </button>
            </form>
        </div>

        @if (!showDeleteConfirmation)
        {
            <button class="btn btn-danger" @onclick="ShowDeleteConfirmation">
                <i class="bi bi-exclamation-triangle"></i> Delete All Data and Cancel Account
            </button>
        }
        else
        {
            <div class="alert alert-danger mt-3" role="alert">
                <h5 class="alert-heading">⚠️ Permanent Data Deletion</h5>
                <p><strong>This action will permanently delete ALL of your data including:</strong></p>
                <ul class="mb-3">
                    <li>Your account and profile information</li>
                    <li>All your content and documents</li>
                    <li>All uploaded files and images</li>
                    <li>Storage usage records</li>
                    <li>Activity audit logs</li>
                    <li>Any other personal data associated with your account</li>
                </ul>
                <p class="mb-0"><strong>This cannot be undone!</strong></p>
            </div>

            <EditForm Model="Input" FormName="delete-all-data" OnValidSubmit="OnValidSubmitAsync" method="post">
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger" role="alert" />
                
                @if (requirePassword)
                {
                    <div class="form-floating mb-3">
                        <InputText type="password" @bind-Value="Input.Password" id="Input.Password" 
                                   class="form-control" autocomplete="current-password" aria-required="true" 
                                   placeholder="Please enter your password." />
                        <label for="Input.Password" class="form-label">Confirm with your password</label>
                        <ValidationMessage For="() => Input.Password" class="text-danger" />
                    </div>
                }
                
                <div class="form-check mb-3">
                    <InputCheckbox @bind-Value="Input.ConfirmDeletion" class="form-check-input" id="confirmDeletion" />
                    <label class="form-check-label" for="confirmDeletion">
                        <strong>I understand this will permanently delete all my data and cannot be undone.</strong>
                    </label>
                    <ValidationMessage For="() => Input.ConfirmDeletion" class="text-danger" />
                </div>
                
                <div class="d-grid gap-2 d-md-flex justify-content-md-start">
                    <button type="button" class="btn btn-outline-secondary me-md-2" @onclick="HideDeleteConfirmation">
                        Cancel
                    </button>
                    <button class="btn btn-danger" type="submit" disabled="@isDeleting">
                        @if (isDeleting)
                        {
                            <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                            <span>Deleting all data...</span>
                        }
                        else
                        {
                            <i class="bi bi-trash"></i>
                            <span>Delete Everything</span>
                        }
                    </button>
                </div>
            </EditForm>
        }
        
        <div class="mt-3">
            <p class="text-muted">
                <small>
                    You can also use the 
                    <a href="Account/Manage/CancelAccount" class="text-decoration-none">Cancel Account</a> 
                    page for a more detailed cancellation process.
                </small>
            </p>
        </div>
    </div>
</div>

@code {
    private string? message;
    private ApplicationUser user = default!;
    private bool requirePassword;
    private bool showDeleteConfirmation = false;
    private bool isDeleting = false;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Input ??= new();
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        requirePassword = await UserManager.HasPasswordAsync(user);
    }

    private void ShowDeleteConfirmation()
    {
        showDeleteConfirmation = true;
        message = null;
        StateHasChanged();
    }

    private void HideDeleteConfirmation()
    {
        showDeleteConfirmation = false;
        message = null;
        StateHasChanged();
    }

    private async Task OnValidSubmitAsync()
    {
        if (!Input.ConfirmDeletion)
        {
            message = "Error: You must confirm that you understand this action cannot be undone.";
            return;
        }

        if (requirePassword && !await UserManager.CheckPasswordAsync(user, Input.Password))
        {
            message = "Error: Incorrect password.";
            return;
        }

        isDeleting = true;
        StateHasChanged();

        try
        {
            var success = await UserDataDeletionService.DeleteAllUserDataAsync(user);
            
            if (!success)
            {
                message = "Error: An unexpected error occurred while deleting your data. Please try again or contact support.";
                isDeleting = false;
                return;
            }

            Logger.LogInformation("User with ID '{UserId}' successfully deleted all their data from PersonalData page.", user.Id);
            
            // Redirect to home page since user is signed out
            RedirectManager.RedirectTo("/");
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error occurred during data deletion from PersonalData page for user: {UserId}", user.Id);
            message = "Error: An unexpected error occurred while deleting your data. Please try again or contact support.";
            isDeleting = false;
        }
    }

    private sealed class InputModel
    {
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";

        [Required(ErrorMessage = "You must confirm that you understand this action cannot be undone.")]
        [Range(typeof(bool), "true", "true", ErrorMessage = "You must confirm that you understand this action cannot be undone.")]
        public bool ConfirmDeletion { get; set; } = false;
    }
}
