@using Pinetree.Model
@using Pinetree.Data


@inject NavigationManager Navigation
@inject ApplicationDbContext DbContext

@if (PineTree != null)
{
    <ul>
        <li>
            <span @onclick="() => ToggleNode(PineTree)">
                @if (PineTree.Children.Any())
                {
                    <span>@(PineTree.IsExpanded ? "-" : "+")</span>
                }
                else
                {
                    <span>&nbsp;</span>
                }
                @PineTree.Title
            </span>
            <button @onclick="() => AddChild(PineTree)">+</button>

            @foreach (var tree in PineTree.Children)
            {
                <PineTreeView UserId="@(UserId)" PineTree="@(tree)" />

@*                 @if (tree.IsExpanded && tree.Children.Any())
                {
                    <PineTreeView PineTree="@(tree)" />
                }
 *@            }
        </li>
    </ul>
}

@code {
    [Parameter]
    public required string UserId { get; set; }

    [Parameter]
    public required PineTree PineTree { get; set; }


    private void ToggleNode(PineTree node)
    {
        node.IsExpanded = !node.IsExpanded;
    }

    private void AddChild(PineTree node)
    {
        var pinecone = new Pinecone() { Title = "Untitled", Content = "", GroupId = PineTree.GroupId, ParentId = PineTree.Id, UserId = UserId!, IsSandbox = false };
        DbContext.Pinecone.Add(pinecone);
        DbContext.SaveChanges();

        var url = $"/markdown-editor/{UserId}/{pinecone.Id}";
        Navigation.NavigateTo(url);
        StateHasChanged();
    }
}
