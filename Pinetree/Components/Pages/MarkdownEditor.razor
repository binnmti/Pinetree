@page "/markdown-editor"
@using Markdig
@using Pinetree.Components.Components
@using Pinetree.Data
@using Pinetree.Model
@inject IJSRuntime JS
@rendermode InteractiveServer
@inject ApplicationDbContext DbContext
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedLocalStorage ProtectedLocalStore

<div class="editor-container">

    <PineTreeView PineTree="@(PineTree)" />

    <div class="markdown-title">
        <input/><p>@Title</p>
        <button @onclick="SaveText">Save</button>
    </div>
    <div class="markdown-editor">
        <div class="editor">
            <textarea @oninput="OnInputChange" class="markdown-input" placeholder="Write your markdown here...">@Context</textarea>
        </div>
        <div class="preview">
            @((MarkupString)MarkdownText)
        </div>
    </div>
</div>

@code {
    public required PineTree PineTree { get; set; }

    private string Context { get; set; } = "";
    private string Title { get; set; } = "";

    private string MarkdownText = "";

    private void SaveText()
    {
        var pinecone = new Pinecone() { Content = Context, ParentId = -1, Title = Title, GroupId = -1 };
        DbContext.Pinecone.Add(pinecone);
        DbContext.SaveChanges();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // TODO: Get PineTree from database
            PineTree = new PineTree(1, "AAA", "BCDE");

            var result = await ProtectedLocalStore.GetAsync<string>("Context");
            if (result.Success && !string.IsNullOrEmpty(result.Value))
            {
                Context = result.Value;
                MarkdownText = Markdown.ToHtml(Context);
            }
            StateHasChanged();
        }
    }

    private async Task OnInputChange(ChangeEventArgs e)
    {
        Context = e.Value?.ToString() ?? "";
        MarkdownText = Markdown.ToHtml(Context);

        await ProtectedLocalStore.SetAsync("Context", Context);
        StateHasChanged();
    }
}
