@page "/"

@using Pinetree.Components.Services
@using Pinetree.Model
@using Pinetree.Data
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using System.Security.Claims

@inject NavigationManager NavigationManager
@inject ApplicationDbContext DbContext
@inject ProtectedLocalStorage ProtectedLocalStore
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IHttpContextAccessor HttpContextAccessor

@rendermode InteractiveServer

<PageTitle>Home</PageTitle>
<div style="display: flex; justify-content: center; align-items: center; height: 100vh; text-align: center; flex-direction: column;">
    <h1 style="font-size: 4em; margin-bottom: 0.5em;">Welcome to Pinetree</h1>
    <p style="font-size: 2em; margin-bottom: 1em;">A hierarchical Markdown editor for your needs</p>
    <img src="Pinetree.png" alt="Pinetree Image" />
    <div class="mt-4">
        <button class="btn btn-outline-primary btn-lg m-2" @onclick="TryItNow"><i class="bi bi-tools"></i>Try it now</button>
        <button class="btn btn-outline-success btn-lg m-2" @onclick="Register"><i class="bi bi-person"></i>Register</button>
    </div>
</div>

@code {

#if !DEBUG
    protected override async Task OnInitializedAsync()
    {
        await NavigateUserListIfAuthUser();
    }
#else
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await NavigateUserListIfAuthUser();
        }
    }
#endif

    private async Task NavigateUserListIfAuthUser()
    {
        var identity = await AuthenticationStateProvider.GetIdentityAsync();
        if (identity != null && identity.IsAuthenticated)
        {
            var url = $"/{identity.Name}/List";
            NavigationManager.NavigateTo(url);
        }
    }

    private async Task TryItNow()
    {
        var userId = await ProtectedLocalStore.GetOrCreateUserIdAsync();
        var ip = HttpContextAccessor.HttpContext?.Connection?.RemoteIpAddress?.ToString() ?? "Unknown";
        await DbContext.AddOrUpdateTryUserAsync(userId, ip);
        var pinecode = await DbContext.GetUserTopAsync(userId) ?? await DbContext.AddTopAsync(userId);
        var url = $"/{userId}/Tryit/{pinecode.Id}";
        NavigationManager.NavigateTo(url);
    }

    private void Register()
    {
        NavigationManager.NavigateTo("Account/Register");
    }
}
