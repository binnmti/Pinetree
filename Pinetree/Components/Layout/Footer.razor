@using Pinetree.Services
<footer class="footer @GetFooterClass()">
    <div class="container">
        <div class="d-flex flex-column align-items-center">
            <div class="footer-links my-1">
                <a href="/changelog" class="mx-2">Changelog</a>
                <a href="/terms" class="mx-2">Terms</a>
                <a href="/privacy" class="mx-2">Privacy</a>
                <a href="/commercial-transactions" class="mx-2">特定商取引法に基づく表記</a>
                <a href="https://x.com/pinetree_site" target="_blank" rel="noopener noreferrer" class="mx-2">
                    <i class="bi bi-twitter-x"></i>
                </a>
                <a href="https://github.com/binnmti/Pinetree" target="_blank" rel="noopener noreferrer" class="mx-2">
                    <i class="bi bi-github"></i>
                </a>
            </div>
            <div class="footer-copyright my-1 text-center">
                <span>© 2025 Pinetree</span>
                <span class="version ms-2">Version @appVersion</span>
            </div>
        </div>
    </div>
</footer>

<style>
    .footer {
        width: 100%;
        background-color: #f5f5f5;
        padding: 10px 0;
        border-top: 1px solid #ddd;
        margin-top: 20px;
    }

    .footer-fixed {
        position: fixed;
        bottom: 0;
        left: 0;
        z-index: 1000;
    }

    .footer-hidden {
        display: none;
    }
    
    .footer-links {
        font-size: 0.9rem;
    }

    .footer-links a {
        text-decoration: none;
        color: #666;
        transition: color 0.2s;
    }

    .footer-links a:hover {
        color: #0056b3;
    }

    .footer-copyright {
        font-size: 0.85rem;
        color: #666;
    }

    .version {
        color: #888;
    }
</style>

@code {
    [Inject]
    private IConfiguration Configuration { get; set; } = default!;

    [Inject]
    private NavigationManager NavigationManager { get; set; } = default!;

    [Inject]
    private VersionService VersionService { get; set; } = default!;

    private string appVersion = "1.0.0";

    private string GetFooterClass()
    {
        var path = NavigationManager.ToBaseRelativePath(NavigationManager.Uri).ToLowerInvariant();

        if (path.StartsWith("play") ||
            path.StartsWith("edit/") ||
            path.StartsWith("trash/") ||
            path.StartsWith("view/"))
        {
            return "footer-hidden";
        }

        if (path == "")
        {
            return "footer-fixed";
        }

        return "";
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            appVersion = await VersionService.GetLatestVersionAsync();
        }
        catch (Exception)
        {
            // Use fallback version if service fails
            appVersion = Configuration["AppVersion"] ?? "1.0.0";
        }
        
        NavigationManager.LocationChanged += (sender, e) => StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= (sender, e) => StateHasChanged();
    }
}