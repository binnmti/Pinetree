name: Update Changelog

on:
  pull_request:

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  update-changelog:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Checkout PR branch
        run: |
          git fetch origin ${{ steps.pr.outputs.branch }}
          git checkout ${{ steps.pr.outputs.branch }}

      - name: Update Changelog
        run: |
          # Get PR body
          pr_body="${{ github.event.pull_request.body }}"
          
          # Extract version (look for [1.2.3] format)
          version=$(echo "$pr_body" | grep -o '\[[0-9]\+\.[0-9]\+\.[0-9]\+\]' | head -1 | tr -d '[]')
          
          # If no version found, use date-based version
          if [ -z "$version" ]; then
            version="0.$(date +%m).$(date +%d)"
          fi
          
          # Extract changelog content (everything after version line)
          changelog_content=$(echo "$pr_body" | sed -n '/^\[.*\]/,$ p' | tail -n +2 | sed '/^$/d')
          
          # If no changelog content found, use PR title
          if [ -z "$changelog_content" ]; then
            changelog_content="### Features"$'\n'"- ${{ github.event.pull_request.title }}"
          fi
          
          # Update changelog file
          {
            echo "## [$version] - $(date +%Y-%m-%d)"
            echo ""
            echo "$changelog_content"
            echo ""
            echo "---"
            echo ""
            cat Pinetree/wwwroot/Changelog.md
          } > temp_changelog.md
          
          mv temp_changelog.md Pinetree/wwwroot/Changelog.md
      
      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add Pinetree/wwwroot/Changelog.md
          git commit -m "docs: update changelog for v${{ steps.changelog.outputs.version }} (PR #${{ steps.pr.outputs.number }})"
          git push origin ${{ steps.pr.outputs.branch }}
     
      - name: Send Discord notification
        if: success()
        run: |
          escaped_changelog=$(echo "${{ steps.changelog.outputs.changelog_content }}" | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')
          
          payload=$(cat << EOF
          {
            "embeds": [{
              "title": "📝 Changelog Updated - v${{ steps.changelog.outputs.version }}",
              "description": "**PR #${{ steps.pr.outputs.number }}: ${{ steps.pr.outputs.title }}**\\n\\n${escaped_changelog}",
              "color": 3447003,
              "fields": [
                {
                  "name": "Author",
                  "value": "${{ steps.pr.outputs.author }}",
                  "inline": true
                },
                {
                  "name": "PR Number",
                  "value": "#${{ steps.pr.outputs.number }}",
                  "inline": true
                },
                {
                  "name": "Version",
                  "value": "${{ steps.changelog.outputs.version }}",
                  "inline": true
                }
              ],
              "url": "${{ steps.pr.outputs.url }}",
              "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%S.000Z)"
            }]
          }
          EOF
          )
          
          echo "$payload" | curl -H "Content-Type: application/json" -X POST -d @- "${{ secrets.DISCORD_WEBHOOK_URL }}"