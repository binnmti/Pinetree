name: Update Changelog

on:
  pull_request:
    types: edited

jobs:
  update-changelog:
    runs-on: ubuntu-latest
    
    env:
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq

    - name: Validate and set variables
      run: |
        # Safely extract and validate inputs
        RAW_TITLE="${{ github.event.pull_request.title || github.event.head_commit.message }}"
        RAW_BODY="${{ github.event.pull_request.body || github.event.head_commit.message }}"
        
        # Validate and sanitize inputs
        if [ -z "$RAW_TITLE" ]; then
          echo "Error: No title provided"
          exit 1
        fi
        
        # Use printf %q to safely quote strings and prevent injection
        VERSION=$(printf '%q' "$RAW_TITLE" | head -c 200)  # Limit length
        SUMMARY=$(printf '%q' "$RAW_BODY" | head -c 500)   # Limit length
        
        # Remove any potentially dangerous characters
        VERSION=$(echo "$VERSION" | tr -d '`$(){}[]|;&<>')
        SUMMARY=$(echo "$SUMMARY" | tr -d '`$(){}[]|;&<>')
        
        # Export sanitized variables
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "SUMMARY=$SUMMARY" >> $GITHUB_ENV
        echo "TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV

    - name: Update changelog
      run: |
        # Create changelog entry using here document to avoid injection
        cat > /tmp/changelog_entry << EOF
        ## $VERSION - $TIMESTAMP

        $SUMMARY

        EOF
        
        # Safely update changelog
        if [ -f CHANGELOG.md ]; then
          # Backup original
          cp CHANGELOG.md CHANGELOG.md.bak
          
          # Create new changelog
          cat /tmp/changelog_entry CHANGELOG.md.bak > CHANGELOG.md
        else
          # Create new changelog
          echo "# Changelog" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          cat /tmp/changelog_entry >> CHANGELOG.md
        fi

    - name: Commit changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        if git diff --quiet CHANGELOG.md; then
          echo "No changes to commit"
        else
          git add CHANGELOG.md
          git commit -m "Update changelog: $(echo "$VERSION" | head -c 50)"
          git push
        fi

    - name: Send Discord notification
      if: env.DISCORD_WEBHOOK_URL != ''
      run: |
        # Use jq to safely create JSON payload
        DISCORD_PAYLOAD=$(jq -n \
          --arg version "$VERSION" \
          --arg summary "$SUMMARY" \
          --arg url "${{ github.event.pull_request.html_url || github.event.head_commit.url }}" \
          '{
            "content": "üìù Changelog Updated",
            "embeds": [{
              "title": ($version | tostring | .[0:100]),
              "description": ($summary | tostring | .[0:500]),
              "url": $url,
              "color": 5814783,
              "timestamp": (now | strftime("%Y-%m-%dT%H:%M:%SZ"))
            }]
          }')
        
        # Send notification
        curl -X POST \
             -H "Content-Type: application/json" \
             -d "$DISCORD_PAYLOAD" \
             "$DISCORD_WEBHOOK_URL" \
             --fail --silent --show-error