name: Staging Deployment
on:
  push:
    branches:
    - staging/*

env:
  AZURE_WEBAPP_PACKAGE_PATH: Pinetree\published
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 9.0.x
  ASPNETCORE_ENVIRONMENT: Staging
  ARTIFACT_RETENTION_DAYS: 2

jobs:
  build-and-unit-tests:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.nuget/packages
          ${{ github.workspace }}/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.props', '**/*.targets') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    
    - name: Restore
      run: dotnet restore
    
    - name: Build
      run: dotnet build --configuration ${{ env.CONFIGURATION }} --no-restore
    
    - name: Run Unit Tests
      run: dotnet test Pinetree.TestProject/Pinetree.TestProject.csproj --no-build
    
    - name: Publish
      run: dotnet publish Pinetree/Pinetree.csproj --configuration ${{ env.CONFIGURATION }} --output "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"
    
    - name: Publish Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: webapp-staging-${{ github.sha }}
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}

  migrate:
    runs-on: windows-latest
    needs: build-and-unit-tests
    steps:
    - uses: actions/checkout@v4
    - name: Install EF Core tools
      run: dotnet tool install --global dotnet-ef
    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.Pinetree_SPN }}
    - name: Add IP to Azure SQL firewall
      run: |
        $ip = (Invoke-WebRequest -Uri https://api.ipify.org).Content
        Write-Host "GitHub Actions IP: $ip"
        az sql server firewall-rule create `
          --resource-group "pinetree-staging" `
          --server "pinetree-staging" `
          --name "GithubActions-Temporary" `
          --start-ip-address $ip `
          --end-ip-address $ip
    - name: Run database migrations
      run: |
        cd Pinetree
        dotnet ef database update --configuration ${{ env.CONFIGURATION }} --verbose
      env:
        ConnectionStrings__DefaultConnection: ${{ secrets.STAGING_DB_CONNECTION }}
        TypeScriptCompileBlocked: true
    - name: Remove IP from Azure SQL firewall
      if: always()
      run: |
        az sql server firewall-rule delete `
          --resource-group "pinetree-staging" `
          --server "pinetree-staging" `
          --name "GithubActions-Temporary"
  deploy:
    runs-on: windows-latest
    needs: [build-and-unit-tests, migrate]
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: webapp-staging-${{ github.sha }}
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
    
    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.Pinetree_SPN }}
    
    - name: Deploy to Azure WebApp
      uses: azure/webapps-deploy@v2
      with:
        app-name: pinetree-staging
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
    
    - name: Configure Azure Web App Settings
      run: |
        az webapp config appsettings set --name pinetree-staging --resource-group pinetree-staging --settings ASPNETCORE_ENVIRONMENT=Staging

