@page "/"
@using Pinetree.Client.Services

@rendermode InteractiveAuto

<PageTitle>Pinetree</PageTitle>
<HeadContent>
    <meta property="og:title" content=@Title />
    <meta name="twitter:title" content=@Title />
    <meta name="description" content=@Description />
    <meta property="og:description" content=@Description />
    <meta name="twitter:description" content=@Description />
    <meta property="og:url" content=@Url />
    <link rel="canonical" href=@Url />
</HeadContent>

<div class="position-relative">
    <!-- Main Content - Centered -->
    <div style="display: flex; justify-content: center; align-items: center; text-align: center; flex-direction: column;">
        
        <h1 style="font-size: 4em; margin-top: 50px;">
            <img src="pinetree.png" alt="Bootstrap" width="64" height="64">
            Pinetree is browser-based <span class="highlight-text">hierarchical</span> markdown editor
        </h1>
        <div class="mt-4 button-container">
            <a class="btn btn-outline-primary btn-lg m-2" href="/play"><i class="bi bi-tools"></i>Playground</a>
            <a class="btn btn-outline-success btn-lg m-2" href="Account/Register"><i class="bi bi-person"></i>Register</a>
        </div>
        <img src="PinetreeScreen.png" alt="Pinetree Image" class="mt-4 main-image" width="800" height="450" />

        <!-- Hierarchical emphasis section -->
        <div class="hierarchical-emphasis my-5 py-4">
            <h2 class="mb-4">What is a <span class="highlight-text">Hierarchical</span> Markdown Editor?</h2>

            <div class="concept-box">
                <div class="concept-icon">
                    <i class="bi bi-file-earmark-text"></i>
                </div>
                <div class="concept-content">
                    <p class="mb-0">
                        Pinetree draws inspiration from Amazon's "One Pager" culture, which focuses on condensing key points into a single page. People prefer concise, readable content, yet there are times when detailed information is necessary.
                    </p>
                </div>
            </div>

            <div class="concept-box">
                <div class="concept-icon">
                    <i class="bi bi-diagram-3"></i>
                </div>
                <div class="concept-content">
                    <p class="mb-0">
                        As documents grow more detailed, we typically organize them with rules and folders. However, traditional file structures lack physical connections between these documents. Pinetree allows you to express content in a "hierarchical" format and navigate via links, enabling readers to naturally understand the relationships between content.
                    </p>
                </div>
            </div>

            <div class="concept-box">
                <div class="concept-icon">
                    <i class="bi bi-layout-text-window"></i>
                </div>
                <div class="concept-content">
                    <p class="mb-0">
                        Pinetree is ideal for travel plans, resumes, reading notes, and any document requiring both "conciseness" and "detail." You can keep each piece of content as simple as possible while adding hierarchical details as needed. Experience this new writing style for yourself.
                    </p>
                </div>
            </div>
        </div>

        <!-- Video section -->
        <div class="video-container my-5 pt-4">
            <h2>See Pinetree in Action</h2>
            <div class="video-wrapper">
                <video controls preload="metadata" width="960" height="576">
                    <source src="PlayPinetree.mp4" type="video/mp4">
                </video>
            </div>
            <p class="video-description">
                Watch how Pinetree helps you organize your thoughts hierarchically and efficiently.
                This short demonstration shows the key features of our markdown editor in action.
            </p>
        </div>
    </div>
</div>

<!-- Call to action - Full width with distinct background -->
<div class="cta-container">
    <div class="cta-section">
        <h2>Ready to get started?</h2>
        <p>Join our community of organized writers and thinkers today!</p>
        <div class="mt-4">
            <a class="btn btn-primary btn-lg m-2" href="/play"><i class="bi bi-tools"></i>Playground</a>
            <a class="btn btn-success btn-lg m-2" href="Account/Register"><i class="bi bi-person"></i>Register</a>
            <a class="btn btn-info btn-lg m-2" href="/Pricing"><i class="bi bi-tag"></i>Pricing</a>
        </div>

        <div class="mt-4">
            <p class="text-muted">
                We're currently in a phase where we want as many users as possible to try our service. <br>
                Please start with <a href="/play">Playground</a> and we'd appreciate your <a href="/Feedback">feedback</a> afterwards. <br>
                Users who provide valuable feedback will receive a permanent free pass! <br>
                We're also offering a free 1-year premium membership campaign limited to 33 users for our <a href="/Pricing">paid plans</a>!<br>
            </p>
        </div>
    </div>
</div>

@code {
    [Inject]
    public required NavigationManager NavigationManager { get; set; }

    [Inject]
    public required AuthenticationStateProvider AuthenticationStateProvider { get; set; }

    public const string Url = "https://pine-tree.site";
    public const string Title = "Pinetree";
    public const string Description = "Pinetree is a browser-based hierarchical markdown editor.Inspired by Amazon's One-Pager culture, Pinetree helps you create concise documents that everyone actually wants to read. While a one-page summary is ideal, sometimes details matter too.";

#if !DEBUG
    protected override async Task OnInitializedAsync()
    {
        await NavigateUserListIfAuthUser();
    }
#else
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await NavigateUserListIfAuthUser();
        }
    }
#endif
    private async Task NavigateUserListIfAuthUser()
    {
        var identity = await AuthenticationStateProvider.GetIdentityAsync();
        if (identity != null && identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo($"/User");
        }
    }
}