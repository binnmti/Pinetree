@page "/"
@using Pinetree.Client.Services
@using Pinetree.Shared.Services
@using Pinetree.Shared.Resources
@inject IJSRuntime JSRuntime
@inject LocalizationService LocalizationService
@rendermode InteractiveAuto
@implements IAsyncDisposable

<PageTitle>Pinetree(Beta)</PageTitle>
<HeadContent>
    <meta property="og:title" content=@Title />
    <meta name="twitter:title" content=@Title />
    <meta name="description" content=@Description />
    <meta property="og:description" content=@Description />
    <meta name="twitter:description" content=@Description />
    <meta property="og:url" content=@Url />
    <link rel="canonical" href=@Url />
</HeadContent>

@if (!LocalizationService.IsInitialized)
{
    <div class="d-flex justify-content-center align-items-center" style="height: 50vh;">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
<div class="position-relative">
    <!-- Main Content - Centered -->
    <div style="display: flex; justify-content: center; align-items: center; text-align: center; flex-direction: column;">

        <h1 style="font-size: 4em; margin-top: 50px;">
            <img src="img/Pinetree64.webp" alt="Pinetree logo" width="64" height="64">
            @LocalizationService.GetLocalizedString("Title", typeof(HomeResources))
        </h1>
        <div class="mt-4 button-container">
                <a class="btn btn-outline-primary btn-lg m-2" href="/play"><i class="bi bi-tools"></i>Playground</a>
            <a class="btn btn-outline-success btn-lg m-2" href="Account/Register"><i class="bi bi-person"></i>@LocalizationService.GetLocalizedString("Register", typeof(HomeResources))</a>
        </div>
        <div class="slider-container mt-4">            
            <div class="slider" id="imageSlider">
                <div class="slide active">
                    <img src="img/PinetreeScreen.webp" alt="Pinetree Screenshot 1" class="main-image" />
                </div>
                <div class="slide">
                    <img src="img/PinetreeScreen2.webp" alt="Pinetree Screenshot 2" class="main-image" />
                </div>
                <div class="slide">
                    <img src="img/PinetreeScreen3.webp" alt="Pinetree Screenshot 3" class="main-image" />
                </div>
            </div>
            <div class="slider-controls">
                <button class="slider-arrow prev" @onclick="PrevSlide">❮</button>
                <div class="slider-dots">
                    <span class="dot active" @onclick="() => SetSlide(0)"></span>
                    <span class="dot" @onclick="() => SetSlide(1)"></span>
                    <span class="dot" @onclick="() => SetSlide(2)"></span>
                </div>
                <button class="slider-arrow next" @onclick="NextSlide">❯</button>
            </div>
        </div>

        <!-- Hierarchical emphasis section -->
        <div class="hierarchical-emphasis my-5 py-4">
            <h2 class="mb-4">@LocalizationService.GetLocalizedString("WhatIsHierarchical", typeof(HomeResources))</h2>

            <div class="concept-box">
                <div class="concept-icon">
                    <i class="bi bi-file-earmark-text"></i>
                </div>
                <div class="concept-content">
                    <p class="mb-0">
                        @LocalizationService.GetLocalizedString("ConceptOnePageDescription", typeof(HomeResources))
                    </p>
                </div>
            </div>

            <div class="concept-box">
                <div class="concept-icon">
                    <i class="bi bi-diagram-3"></i>
                </div>
                <div class="concept-content">
                    <p class="mb-0">
                        @LocalizationService.GetLocalizedString("ConceptHierarchicalDescription", typeof(HomeResources))
                    </p>
                </div>
            </div>

            <div class="concept-box">
                <div class="concept-icon">
                    <i class="bi bi-layout-text-window"></i>
                </div>
                <div class="concept-content">
                    <p class="mb-0">
                            @((MarkupString)LocalizationService.GetLocalizedString("ConceptIdealUseDescription", typeof(HomeResources)).Replace("resume", "<a href=\"https://pine-tree.site/View/binnmti/7dc5d7ec-4ccc-497d-a3f1-307a33e5342e\" target=\"_blank\" rel=\"noopener noreferrer\">resume</a>").Replace("履歴書", "<a href=\"https://pine-tree.site/View/binnmti/df0a1572-eb29-4157-aa52-3efd937b0947\" target=\"_blank\" rel=\"noopener noreferrer\">履歴書</a>"))
                    </p>
                </div>
            </div>
            <blockquote class="mt-4 text-center">
                <p class="fst-italic">@((MarkupString)LocalizationService.GetLocalizedString("CreateMultipleDocuments", typeof(HomeResources)).Replace("register", "<a href=\"Account/Register\" class=\"alert-link\">register</a>").Replace("ユーザー登録", "<a href=\"Account/Register\" class=\"alert-link\">ユーザー登録</a>"))</p>
            </blockquote>
        </div>        <!-- Video section -->
        <div class="video-container my-5 pt-4">
            <h2>@LocalizationService.GetLocalizedString("OverviewAndDemo", typeof(HomeResources))</h2>
            <div class="video-wrapper">
                <iframe width="520"
                        src="https://www.youtube.com/embed/afYPumK4trY"
                        title="Pinetree Overview and Demo"
                        frameborder="0"
                        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                        allowfullscreen>
                </iframe>
            </div>              
            <p class="video-description">
                @LocalizationService.GetLocalizedString("VideoDescription", typeof(HomeResources))
            </p>
            <div class="alert alert-info mt-3">
                <div class="d-flex align-items-start">
                    <i class="bi bi-info-circle-fill me-2 mt-1"></i>
                    <div>
                        <strong>@LocalizationService.GetLocalizedString("BetaVersionNotice", typeof(HomeResources))</strong> 
                        @LocalizationService.GetLocalizedString("BetaVersionDescription", typeof(HomeResources))
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Call to action - Full width with distinct background -->
<div class="cta-container">
    <div class="cta-section">
        <h2>@LocalizationService.GetLocalizedString("ReadyToGetStarted", typeof(HomeResources))</h2>
        <p>@LocalizationService.GetLocalizedString("JoinCommunity", typeof(HomeResources))</p>
        <div class="mt-4">
                <a class="btn btn-primary btn-lg m-2" href="/play"><i class="bi bi-tools"></i>Playground</a>
            <a class="btn btn-success btn-lg m-2" href="Account/Register"><i class="bi bi-person"></i>@LocalizationService.GetLocalizedString("Register", typeof(HomeResources))</a>
            <a class="btn btn-info btn-lg m-2" href="/Pricing"><i class="bi bi-tag"></i>@LocalizationService.GetLocalizedString("Pricing", typeof(HomeResources))</a>
        </div>

        <div class="mt-4">
            <p class="text-muted">
                @LocalizationService.GetLocalizedString("WantManyUsers", typeof(HomeResources)) <br>
                @((MarkupString)LocalizationService.GetLocalizedString("StartWithPlayground", typeof(HomeResources)).Replace("Playground", "<a href=\"/play\">Playground</a>").Replace("プレイグラウンド", "<a href=\"/play\">プレイグラウンド</a>").Replace("feedback", $"<a href=\"/Feedback\">{LocalizationService.GetLocalizedString("Feedback", typeof(HomeResources))}</a>").Replace("フィードバック", $"<a href=\"/Feedback\">{LocalizationService.GetLocalizedString("Feedback", typeof(HomeResources))}</a>")) <br>
                @LocalizationService.GetLocalizedString("FreePassForFeedback", typeof(HomeResources)) <br>
            </p>
        </div>
    </div>
</div>
}

@code {
    [Inject]
    public required NavigationManager NavigationManager { get; set; }

    [Inject]
    public required AuthenticationStateProvider AuthenticationStateProvider { get; set; }

    public const string Url = "https://pine-tree.site";
    public const string Title = "Pinetree(Beta)";
    public const string Description = "Pinetree is a browser-based hierarchical markdown editor.Inspired by Amazon's One-Pager culture, Pinetree helps you create concise documents that everyone actually wants to read. While a one-page summary is ideal, sometimes details matter too.";

    private IJSObjectReference? _jsModule;

    protected override async Task OnInitializedAsync()
    {
        await LocalizationService.InitializeAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            
            try
            {
                _jsModule = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./Pages/Home.razor.js");
                await _jsModule.InvokeVoidAsync("initializeSlider");
            }
            catch (Exception ex)
            {
                Console.Error.WriteLine($"Error initializing slider: {ex.Message}");
            }
        }
    }

    private async Task NextSlide()
    {
        if (_jsModule != null)
        {
            await _jsModule.InvokeVoidAsync("nextSlide");
        }
    }

    private async Task PrevSlide()
    {
        if (_jsModule != null)
        {
            await _jsModule.InvokeVoidAsync("prevSlide");
        }
    }

    private async Task SetSlide(int index)
    {
        if (_jsModule != null)
        {
            await _jsModule.InvokeVoidAsync("setSlide", index);
        }
    }

    public async ValueTask DisposeAsync()
    {
        try
        {
            if (_jsModule != null)
            {
                await _jsModule.InvokeVoidAsync("cleanupSlider");
                await _jsModule.DisposeAsync();
            }
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error disposing slider: {ex.Message}");
        }
    }
}